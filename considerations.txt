* Setting up additional boxes after the initial deployment
  given: host "app1.example.com", :app
  User adds: host "app2.example.com", :app
  User wants to deploy nginx and mongrel to the new server without flattening app1
  
  rake vlad:setup HOSTS='app2.example.com'
  should override the normal 'target_hosts' process and manually set the list

* by merging Vlad and RemoteTask we avoid a lot of crap wrt
  instance_eval and variable lookups etc. Consider it. At one point,
  this wasn't possible but I was too tired to make note of why.

* might we want per connection values?

* sudo / via how? and if we call it via I will stab ppl. "user" is sufficient.

* :except => {:no_release => true}
  It is common to configure tasks to 'announce' deployments in IRC, Campfire, etc.
  If you have 6 app servers, you don't want to see 6 announcements.
  In Capistrano, this is handled via the :no_release => true flag.
  Various tasks only execute on the 'release' servers.
  An easier way to meet this would be to introduce a :release role in the default setup
  role :release, "app1.example.com"
  remote_task :announce_in_irc, :roles => :release ...

  Drawback: Yet another thing to change when you migrate a project from cap to vlad

* :primary => true
  role :db, "db1.example.com", :primary => true
  role :db, "db2.example.com"
  rake vlad:migrate needs to run the Rails database migrations on only one box
  to avoid melting the world.

  This is a huge pile of crap to support this simple use case, so let's just do:
  role :master_db, "db1.example.com"
  remote_task :migrate, :roles => :master_db

  The 'host' method we have added makes this even easier:
  host "only-one-db.example.com", :db, :master_db

* 'dynamic deployments'
  role :app, "app1.example.com"
  role :app, "app2.example.com"
  Let's say that app1 and app2 need slightly different monit configurations.

  In Capistrano, you might approach this by making two additional roles, and 
  splitting your 'push a monit config' task into two. This sucks.
  Vlad makes the 'execution context' of a task available. In Vlad, you would:
  remote_task :update_monit, :roles => :app
    rsync "templates/#{target_host}.monitrc", "/etc/monitrc"
  end
